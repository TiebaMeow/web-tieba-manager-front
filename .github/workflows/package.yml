name: Build, Publish and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*' # 仅在推送 v*.*.* 格式的 tag 时触发
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.read_code.outputs.code }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Node.js 20
        uses: actions/setup-node@v5
        with:
          node-version: '20'

      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: Read code from file
        id: read_code
        run: echo "code=$(cat .github/code.txt)" >> $GITHUB_OUTPUT

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    needs: build
    runs-on: ubuntu-latest
    # 仅在 main 分支推送或手动触发时运行
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: pip install aiohttp

      - name: Publish to server
        env:
          SERVER: ${{ secrets.PUBLISH_SERVER }}
          KEY: ${{ secrets.PUBLISH_KEY }}
        run: python build/publish.py

  release:
    needs: build
    runs-on: ubuntu-latest
    # 仅在推送 tag 时运行
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # 允许创建 Release 和上传附件
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python dependencies
        run: pip install aiohttp

      - name: Get tag name
        id: get_tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create info.json
        run: |
          echo '{
            "tag": "${{ steps.get_tag.outputs.tag }}",
            "code": "${{ needs.build.outputs.code }}"
          }' > dist/info.json

      - name: Create zip package
        id: package
        run: |
          CODE=${{ needs.build.outputs.code }}
          TAG=${{ steps.get_tag.outputs.tag }}
          ZIP_NAME="${CODE}_${TAG}_webui.zip"
          zip -r "${ZIP_NAME}" dist
          echo "zip_name=${ZIP_NAME}" >> $GITHUB_OUTPUT

      - name: Create Draft Release
        id: create_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ steps.get_tag.outputs.tag }}';
            const name = '${{ needs.build.outputs.code }}_${{ steps.get_tag.outputs.tag }}';
            const res = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag,
              name: name,
              draft: true,
              prerelease: false
            });
            core.setOutput('upload_url', res.data.upload_url);

      - name: Upload asset to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
          ASSET_PATH: ${{ steps.package.outputs.zip_name }}
        run: python build/release.py